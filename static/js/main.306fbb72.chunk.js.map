{"version":3,"sources":["types.ts","Header.tsx","Road.tsx","Ad.tsx","Roads.tsx","App.tsx","index.tsx"],"names":["ISource","Header","props","useState","dropdownOptions","setDropdownOptions","useEffect","roads","map","r","key","urlFriendly","value","text","roadName","content","Card","fluid","Dropdown","placeholder","onChange","event","data","setFavorites","setTimeout","document","activeElement","blur","search","selection","multiple","closeOnChange","favorites","disabled","Boolean","length","loading","options","Road","road","setRoad","shouldUpdate","setShouldUpdate","setLoading","useMemo","addEventListener","visibilityState","ReactGA","pageview","fetch","url","then","json","Content","Item","as","Placeholder","image","Line","extra","Paragraph","status","messages","statusMessage","messageFeed","message","index","df","Intl","DateTimeFormat","weekday","month","day","hour","minute","times","format","Date","validFrom","validTo","Feed","Event","Popup","on","trigger","source","StatensVegvesen","Label","icon","inverted","Summary","share","shareNavigator","window","navigator","host","URL","location","href","protocol","clipboard","writeText","title","role","Group","Button","onClick","style","position","right","circular","basic","floated","margin","Image","width","size","src","verticalAlign","replace","Ad","adsbygoogle","push","google_ad_client","className","display","RoadAndAd","React","forwardRef","ref","Divider","process","REACT_APP_DISABLE_ADS","Roads","isMobile","setMobile","refs","innerWidth","innerHeight","reverse","f","find","filter","i","createRef","active","color","button","target","closest","activeRoadIndex","findIndex","nextRoadIndex","nextRoad","current","scrollIntoView","behavior","transform","scrollToNextRoad","zIndex","bottom","left","marginLeft","App","setRoads","alert","setAlert","isMounted","initialize","testMode","debug","pathname","split","roadFromPath","Promise","resolve","localStorage","getItem","JSON","parse","storedFavorites","indexOf","history","replaceState","catch","setItem","stringify","Segment","Menu","secondary","maxWidth","alt","header","Message","negative","onDismiss","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.306fbb72.chunk.js","sourcesContent":["export interface IRoad {\n  roadName: string;\n  urlFriendly: string;\n  url: string;\n}\n\nexport enum ISource {\n  UserReported = \"Brukerskapt melding\",\n  StatensVegvesen = \"Statens Vegvesen\",\n}\n\ninterface IMessage {\n  source: ISource;\n  type: string;\n  validFrom: string;\n  validTo: string;\n  message: string;\n}\n\nexport interface IRoadStatus {\n  messages: IMessage[];\n  status: \"green\" | \"yellow\" | \"red\";\n  statusMessage: string;\n  statusCode: 10 | 20 | 30;\n  gps?: IGPS;\n}\n\nexport interface IGPS {\n  lat: number;\n  lon: number;\n}\n\nexport type IFavorite = string;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Card, Dropdown, DropdownProps } from \"semantic-ui-react\";\nimport { IFavorite, IRoad } from \"./types\";\n\ninterface IDropdownOption {\n  key: string;\n  value: string;\n  text: string;\n}\n\ntype HeaderProps = {\n  roads: IRoad[];\n  favorites: IFavorite[];\n  setFavorites: (f: IFavorite[]) => void;\n};\n\nconst Header = (props: HeaderProps) => {\n  const [dropdownOptions, setDropdownOptions] = useState<IDropdownOption[]>([]);\n\n  useEffect(() => {\n    setDropdownOptions(\n      props.roads.map((r: IRoad) => ({\n        key: r.urlFriendly,\n        value: r.urlFriendly,\n        text: r.roadName,\n        content: <>{r.roadName}</>,\n      }))\n    );\n  }, [props.roads]);\n\n  const addFavorite = (event: any, data: DropdownProps) => {\n    props.setFavorites(data.value as IFavorite[]);\n\n    setTimeout(() => {\n      if (\"activeElement\" in document) {\n        (document.activeElement as HTMLElement).blur();\n      }\n    }, 100);\n  };\n\n  return (\n    <>\n      <Card fluid>\n        <Dropdown\n          placeholder=\"Velg tunnel(er)\"\n          onChange={addFavorite}\n          fluid\n          search\n          selection\n          multiple\n          closeOnChange\n          value={props.favorites}\n          disabled={!Boolean(dropdownOptions.length)}\n          loading={!Boolean(dropdownOptions.length)}\n          options={dropdownOptions}\n        />\n      </Card>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { FC, useEffect, useState, useMemo } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { IRoad, IRoadStatus, ISource } from \"./types\";\nimport {\n  Card,\n  Feed,\n  Popup,\n  Item,\n  Button,\n  Placeholder,\n} from \"semantic-ui-react\";\n\ntype RoadProps = {\n  road: IRoad;\n};\n\nconst Road: FC<any> = (props: RoadProps) => {\n  const [road, setRoad] = useState<IRoadStatus>();\n  const [shouldUpdate, setShouldUpdate] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const { roadName } = props.road;\n\n  useMemo(() => {\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"visible\") {\n        setShouldUpdate(true);\n      } else {\n        setShouldUpdate(false);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    ReactGA.pageview(\"/\" + props.road.urlFriendly);\n\n    setLoading(true);\n    fetch(props.road.url)\n      .then((r) => r.json())\n      .then((r) => {\n        return {\n          ...r,\n          ...props.road,\n        };\n      })\n      .then(setRoad)\n      .then(() => setLoading(false));\n  }, [props.road, shouldUpdate]);\n\n  if (loading) {\n    return (\n      <Card fluid>\n        <Card.Content>\n          <Item.Header as=\"h2\">{roadName}</Item.Header>\n          <Placeholder>\n            <Placeholder.Header image>\n              <Placeholder.Line length=\"full\" />\n              <Placeholder.Line length=\"medium\" />\n              <Placeholder.Line />\n              <Placeholder.Line length=\"medium\" />\n            </Placeholder.Header>\n          </Placeholder>\n        </Card.Content>\n        <Card.Content extra>\n          <Placeholder>\n            <Placeholder.Paragraph>\n              <Placeholder.Line length=\"full\" />\n              <Placeholder.Line />\n              <Placeholder.Line />\n              <Placeholder.Line length=\"full\" />\n            </Placeholder.Paragraph>\n          </Placeholder>\n        </Card.Content>\n      </Card>\n    );\n  }\n  const { status, messages, statusMessage } = road!;\n\n  const image = `https://stengttunnel.no/status/${status}.png`;\n  const messageFeed = messages.map((message, index) => {\n    const df = new Intl.DateTimeFormat(\n      [\"nb-no\", \"da\", \"sv\", \"en-us\", \"en-gb\"],\n      {\n        weekday: \"short\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }\n    );\n\n    const times = `${df.format(new Date(message.validFrom))} - ${df.format(\n      new Date(message.validTo)\n    )}`;\n    return (\n      <Feed.Event key={\"message-\" + index}>\n        <Popup\n          on={\"click\"}\n          trigger={\n            message.source === ISource.StatensVegvesen ? (\n              <Feed.Label image=\"/vv_logo.png\" />\n            ) : (\n              <Feed.Label icon=\"user outline\" />\n            )\n          }\n          content={message.source}\n          inverted\n        />\n        <Feed.Content>\n          <Feed.Date content={times} />\n          <Feed.Summary>{message.message}</Feed.Summary>\n        </Feed.Content>\n      </Feed.Event>\n    );\n  });\n\n  const share = async () => {\n    let shareNavigator = window.navigator as any;\n    const host = new URL(window.location.href);\n    const url = `${host.protocol}//${host.host}/${props.road.urlFriendly}`;\n\n    if (shareNavigator.clipboard) {\n      await window.navigator.clipboard.writeText(url);\n    }\n    if (shareNavigator.share) {\n      await window.navigator.share({\n        title: \"Stengt tunnel\",\n        text: statusMessage + \"\\nSe mer på \",\n        url,\n      });\n    }\n  };\n\n  return (\n    <Card fluid role=\"road\">\n      <Card.Content>\n        <Item.Group>\n          <Popup\n            on={[\"click\"]}\n            trigger={\n              <Button\n                onClick={share}\n                style={{ position: \"absolute\", right: \"10px\" }}\n                icon=\"external share\"\n                circular\n                basic\n              ></Button>\n            }\n            content=\"Kopiert linken\"\n            inverted\n          />\n          <Item floated=\"left\" style={{ margin: 0 }}>\n            <Item.Image style={{ width: \"auto\" }} size=\"tiny\" src={image} />\n            <Item.Content verticalAlign=\"middle\">\n              <Item.Header role=\"status\" as=\"h2\">\n                {statusMessage.replace(/^Tunnelen/, roadName)}\n              </Item.Header>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Card.Content>\n      <Card.Content extra>\n        <Feed>{messageFeed}</Feed>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default Road;\n","import React, { useEffect } from \"react\";\n\nconst Ad = (props: any) => {\n  useEffect(() => {\n    (window.adsbygoogle = window.adsbygoogle || []).push({\n      google_ad_client: \"ca-pub-8133897183984535\",\n      // enable_page_level_ads: true\n    });\n  }, []);\n\n  return (\n    <ins\n      className=\"adsbygoogle\"\n      style={{ display: \"block\" }}\n      data-ad-client=\"ca-pub-8133897183984535\"\n      data-ad-slot=\"5404963764\"\n      data-ad-format=\"auto\"\n      data-full-width-responsive=\"true\"\n      data-adtest={process.env.NODE_ENV === 'development' ? 'on':'off'}\n    />\n  );\n};\n\ndeclare global {\n  interface Window {\n    adsbygoogle: any;\n  }\n}\n\nexport default Ad;\n","import React, { useEffect, useState } from \"react\";\nimport { RefObject } from \"react\";\n\nimport { Divider, Button } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { IRoad, IFavorite } from \"./types\";\nimport Road from \"./Road\";\nimport Ad from \"./Ad\";\n\ntype RoadsProps = {\n  roads: IRoad[];\n  favorites: IFavorite[];\n};\n\ntype RoadAndAdProps = {\n  road: IRoad;\n};\n\ntype RefDataObject = {\n  active: boolean;\n  road: IRoad;\n  ref: RefObject<HTMLDivElement>;\n  key: string;\n};\n\nconst RoadAndAd = React.forwardRef((props: RoadAndAdProps, ref: any) => {\n  const r = props.road;\n  return (\n    <div ref={ref} key={`container-${r.urlFriendly}`}>\n      <Road road={r} />\n      <Divider />\n      {process.env.REACT_APP_DISABLE_ADS !== \"true\" && (\n        <>\n          <Ad />\n          <Divider />\n        </>\n      )}\n    </div>\n  );\n});\n\nconst Roads = (props: RoadsProps) => {\n  const [isMobile, setMobile] = useState<boolean>(false);\n  const refs: RefDataObject[] = [];\n\n  useEffect(() => {\n    setMobile(window.innerWidth < 600 || window.innerHeight < 900);\n  }, []);\n\n  const roads = [...props.favorites]\n    .reverse()\n    .map((f) => props.roads.find((r) => r.urlFriendly === f))\n    .filter(Boolean)\n    .map((value, i) => {\n      const r = value as IRoad;\n      const ref = React.createRef<HTMLDivElement>();\n      refs.push({\n        active: i === 0 ? true : false,\n        ref,\n        road: r,\n        key: r.urlFriendly,\n      });\n      return <RoadAndAd ref={ref} key={r.urlFriendly} road={r} />;\n    });\n\n  const scrollToNextRoad = (event: any, data: any) => {\n    const button = event.target.closest(\"button\");\n    let activeRoadIndex = refs.findIndex((r) => r.active === true);\n    refs[activeRoadIndex].active = false;\n\n    const nextRoadIndex = ++activeRoadIndex % refs.length;\n    const nextRoad = refs[nextRoadIndex];\n\n    nextRoad.active = true;\n    refs[nextRoadIndex] = nextRoad;\n    nextRoad.ref.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n\n    if (nextRoadIndex === refs.length - 1) {\n      button.style.transform = \"rotate(-180deg)\";\n    } else {\n      button.style.transform = \"rotate(0)\";\n    }\n  };\n\n  return (\n    <>\n      {roads}\n      {isMobile && (\n        <Button\n          size=\"massive\"\n          color=\"red\"\n          circular\n          active={false}\n          icon={`arrow down`}\n          onClick={(event, data) => scrollToNextRoad(event, data)}\n          style={{\n            zIndex: 10000,\n            position: \"fixed\",\n            bottom: \"25px\",\n            left: \"50%\",\n            marginLeft: \"-31px\",\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Roads;\n","import React, { useEffect, useState } from \"react\";\nimport { Message, Segment, Menu } from \"semantic-ui-react\";\nimport ReactGA from \"react-ga\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport { IRoad, IFavorite } from \"./types\";\nimport Roads from \"./Roads\";\n\nconst App = () => {\n  const [roads, setRoads] = useState<IRoad[]>([]);\n  const [favorites, setFavorites] = useState<IFavorite[]>([]);\n  const [alert, setAlert] = useState<String | null>(null);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    ReactGA.initialize(\"UA-8420880-19\", {\n      testMode: process.env.NODE_ENV === \"test\",\n      debug: process.env.NODE_ENV === \"development\",\n    });\n    ReactGA.pageview(\"/\");\n\n    fetch(\"https://api.stengttunnel.no/roads.json\")\n      .then((r) => r.json())\n      .then((data) => {\n        if (isMounted) {\n          setRoads(data);\n        }\n      });\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const [, roadFromPath] = window.location.pathname.split(\"/\");\n\n    Promise.resolve(localStorage.getItem(\"favorites\") || \"[]\")\n      .then((r) => JSON.parse(r))\n      .then((storedFavorites) => {\n        if (roadFromPath && roads.find((r) => r.urlFriendly === roadFromPath)) {\n          if (storedFavorites.indexOf(roadFromPath) === -1) {\n            storedFavorites.push(roadFromPath);\n          }\n          window.history.replaceState(null, \"Stengt tunnel\", \"/\");\n        } else if (roadFromPath && roads.length > 0) {\n          setAlert(\"Finner ikke tunnelen eller veien '\" + roadFromPath + \"'\");\n        }\n        return storedFavorites;\n      })\n      .then(setFavorites)\n      .catch(() => setFavorites([]));\n  }, [roads]);\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n\n  return (\n    <>\n      <Segment inverted>\n        <Menu\n          inverted\n          secondary\n          style={{ margin: \"0 auto\", maxWidth: \"640px\" }}\n        >\n          <Menu.Item>\n            <img alt=\"Stengt tunnel logo\" src=\"/images/stengttunnel-logo.png\" />\n          </Menu.Item>\n          <Menu.Item header>Stengt tunnel</Menu.Item>\n        </Menu>\n      </Segment>\n      <div style={{ margin: \"15px auto\", maxWidth: \"640px\" }}>\n        {alert && (\n          <Message\n            negative\n            onDismiss={() => {\n              setAlert(null);\n              window.history.replaceState(null, \"Stengt tunnel\", \"/\");\n            }}\n          >\n            <Message.Header>404 Finner ikke siden</Message.Header>\n            <p>{alert}</p>\n          </Message>\n        )}\n        <Header\n          roads={roads}\n          favorites={favorites}\n          setFavorites={setFavorites}\n        />\n        <Roads favorites={favorites} roads={roads} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"fomantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}